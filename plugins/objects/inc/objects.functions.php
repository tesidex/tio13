<?php

/**
 * plugin Generate objects for Cotonti Siena
 * 
 * @package objects
 * @version 0.9.13
 * @author ElNinjo
 * @copyright tesidex.com
 * @license BSD
 *  */
// Generated by Cotonti developer tool (littledev.ru)
defined('COT_CODE') or die('Wrong URL.');

//$Objects = array(
//    lkjadhflad => adsfkjahdfl;
//);

function getObjectsSql() {
     global $db;
     return $sql = $db->query("SELECT page_id, page_title, page_cat
			       FROM bel_pages
			       WHERE page_cat IN ('region', 'location', 'district', 'architecture')")->fetchAll();
}

function getObjects($category, $page_id = null) {
     global $db;
     switch ($category) {
	  case 'region':
	       $whereobj = "'region'";
	       break;
	  case 'district':
	       $whereobj = "'district' " . ((empty($page_id)) ? '' : "AND page_region_id = $page_id");
	       break;
	  case 'location':
	       $whereobj = "'location' " . ((empty($page_id)) ? '' : "AND page_district_id = $page_id");
	       break;
	  default:
	       break;
     }


     $objects = array();
     if ($category == 'region' || $category == 'district' || $category == 'location') {
	  $sql = $db->query("SELECT page_id, page_title, page_cat, page_district_alias, page_region_alias, page_alias
			     FROM bel_pages 
		             WHERE page_cat = ".$whereobj)
		  ->fetchAll();

	  foreach ($sql as $key => $value) {
	       
	       switch ($category) {
		    case 'location':
			 $url = cot_url('page',
			 'c=' . $value['page_cat'] .
			 '&al=' . $value['page_alias'] .
			 '&rgn=' . $value['page_region_alias'] .
			 '&dst=' . $value['page_district_alias']);
			 break;
		    case 'district':
			 $url = cot_url('page', 'c=' . $value['page_cat'] .
				 '&al=' . $value['page_alias'] .
				 '&rgn=' . $value['page_region_alias']);
			 break;
		    case 'region':
			 $url = cot_url('page', 'c=' . $value['page_cat'] .
				 '&al=' . $value['page_alias']);
			 break;
		    default:
			 break;
	       }
	       
	       
	       
	       
	       $objects['ids'][] = $value['page_id'];
	       $objects['titles'][] = $value['page_title'];
	       $objects['url'][] =  $url;
	  }

     }



     if ($category == 'object_type') {
	  $objects = $db->query("SELECT DISTINCT page_object_type
				  FROM bel_pages
				  WHERE page_cat = 'architecture'")
		  ->fetch();
     }
     
     return $objects;
}

function getLocationsForRegion ($region_id) {
     
	  global $db;
	  $whereobj = "'location' " . ((empty($region_id)) ? '' : "AND page_region_id = $region_id");
     	  $sql = $db->query("SELECT page_id, page_title
			     FROM bel_pages 
		             WHERE page_cat = ".$whereobj)
		    ->fetchAll();
	  

	  foreach ($sql as $key => $value) {
	       $locations[$value['page_id']] = $value['page_title'];
	  }
	  
	  return $locations;
}

function cot_selectbox_objects($chosen, $name, $values, $titles = array(), $add_empty = true, $attrs = '', $custom_rc = '', $htmlspecialchars_bypass = false, $option_attrs)
{
	global $R, $cfg;

	if (!is_array($values))
	{
		$values = explode(',', $values);
	}
	if (!is_array($titles))
	{
		$titles = explode(',', $titles);
	}
	$use_titles = count($values) == count($titles);
	$input_attrs = cot_rc_attr_string($attrs);;
	$chosen = cot_import_buffered($name, $chosen);
	$multi = is_array($chosen) && isset($input_attrs['multiple']);
	$error = $cfg['msg_separate'] ? cot_implode_messages($name, 'error') : '';
	$rc_name = preg_match('#^(\w+)\[(.*?)\]$#', $name, $mt) ? $mt[1] : $name;

	$selected = (is_null($chosen) || $chosen === '' || $chosen == '00') ? ' selected="selected"' : '';
	$rc = empty($R["input_option_{$rc_name}"]) ? 'input_option' : "input_option_{$rc_name}";
	if ($add_empty)
	{
		$options .= cot_rc($rc, array(
			'value' => '',
			'selected' => $selected,
			'title' => $R['code_option_empty']
		));
	}
	$num = 0;
	foreach ($values as $k => $x)
	{
	     
		$x = trim($x);
		$selected = ($multi && in_array($x, $chosen)) || (!$multi && $x == $chosen) ? ' selected="selected"' : '';
		$title = $use_titles ? htmlspecialchars($titles[$k]) : htmlspecialchars($x);
		$options .= cot_rc($rc, array(
			'value' => $htmlspecialchars_bypass ? $x : htmlspecialchars($x),
			'selected' => $selected,
			'title' => $title,
			'data' => $option_attrs[$num]
		));
		$num++;

	}
	$rc = empty($custom_rc)
		? empty($R["input_select_{$rc_name}"]) ? 'input_select' : "input_select_{$rc_name}"
		: $custom_rc;
	$result .= cot_rc($rc, array(
		'name' => $name,
		'attrs' => $input_attrs,
		'error' => $error,
		'options' => $options
	));
	return $result;
}
